.TH ELF_RAND 3 "June 2024" "Elfutils" "Library Functions Manual"

.SH NAME
elf_rand \- set the archive member position for an ELF descriptor

.SH SYNOPSIS
.B #include <libelf.h>

.BI "int elf_rand(Elf *" elf ", off_t " offset ");"

.SH DESCRIPTION
The .B elf_rand function sets the archive member position for the ELF descriptor referred to by .I elf to the archive member at the specified file offset .I offset. This function allows random access to archive members within an ELF archive.

.SH PARAMETERS
.TP
.I elf
An .I Elf pointer to the ELF descriptor representing the archive.

.TP
.I offset
An .I off_t value specifying the file offset of the archive member to set as the current member.

.SH RETURN VALUE
The .B elf_rand function returns 0 on success. If an error occurs, it returns -1 and sets an appropriate error code.

.SH ERRORS
If .B elf_rand fails, it sets the following error codes:

.TP
.B ELFARG
The .I elf parameter is NULL or invalid, or the .I offset parameter is invalid.

.TP
.B ELFERR
An unspecified internal error occurred.

.SH EXAMPLES
.B "Example 1: Set the archive member position in an ELF archive"
.nf
.in +4
#include <libelf.h>

Elf *elf = ...; // Assume elf is a valid Elf pointer for an archive
off_t offset = ...; // Specify a valid offset

if (elf_rand(elf, offset) != 0) {
    // Handle error
} else {
    // The current archive member is now set to the member at the specified offset
}
.in -4
.fi

.SH SEE ALSO
.BR elf (3),
.BR elf_getarhdr (3),
.BR elf_getaroff (3),
.BR elf_begin (3),
.BR elf_next (3),
.BR elf_end (3),
.BR libelf (3)

.SH AUTHORS
Elfutils was written by the Elfutils development team.

.SH COPYRIGHT
Copyright Â© 2024 Elfutils Development Team.
This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

